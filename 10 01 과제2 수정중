#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
struct student //219125112 김대법
{
    int number;
    char name[21];
    char phone[14];
    char email[21];
    char adress[41];
    int bell;
};
int i, k;
char del_name[30];
char del_phone[30];
char temp[20];
char del[] = { NULL };
char subject[6][20] = { "all", "quit", "search", "add", "change", "delete" };
int count = 0;
int search = 0;
int apple = 0;
int stu_number;
char word2[20];
char stu_name[20];
int stu_phone;
int data_size = 0;
struct student* pstudent;
int alloc_size = 3;
struct student tmp;
int main(void)
{
    char function;
    int search;
    int count = 0;
    pstudent = (struct student*)malloc(sizeof(struct student) * alloc_size);
    if (pstudent == NULL)
    {
        printf("메모리를 할당하는데 실패 하였습니다.\n");
        return 0;
    }
    printf("==================================================\n");
    printf("all . 이름 정렬 후 출력\n");
    printf("quit . 종료\n");
    printf("search . 연락처 정보 출력\n");
    printf("add . 사용자 등록\n");
    printf("change . 이름 등 정보 수정\n");
    printf("delete . 해당 이름 전하번호 삭제\n");
    printf("==================================================\n");
    for (;;)
    {
        char w[20];
        printf("메뉴 중에서 하나를 선택하세요:\n");
        scanf("%s", w);
        if (strcmp(subject[0], w) == 0)
        {
            every();
        }
        else if (strcmp(subject[1], w) == 0)
        {
            printf("종료 되었습니다\n");
            break;
        }
        else if (strcmp(subject[2], w) == 0)
        {
            sub();
        }
        else if (strcmp(subject[3], w) == 0)
        {
            sea();
        }
        else if (strcmp(subject[4], w) == 0)
        {
            chan();
        }
        else if (strcmp(subject[5], w) == 0)
        {
            delete();
        }
        else
        {
            printf("다른 메뉴를 선택해 주세요\n");
        }
    }
}
int sub()
{
    printf("이름을 입력해 주세요 : ");
    scanf("%s", stu_name);
    for (i = 0; i < data_size; i++)
    {
        if (strcmp(pstudent[i].name, stu_name) == 0)
        {
            printf("이름 : %s, 전화번호 : %s 이메일 : %s 주소 : %s 벨소리 종류 : %d\n", pstudent[i].name, pstudent[i].phone, pstudent[i].email, pstudent[i].adress, pstudent[i].bell);
            break;
        }
        count++;
    }
    if (count == data_size) {
        printf("입력하신 이름을 가진 학생은 존재하지 않습니다.\n");
        return;
    }
    count = 0;
    printf("\n");
    printf("사용하고자 하는 기능을 선택해 주세요 \n(all: 출력, quit: 종료, search: 검색, add: 추가 change 정보수정, delete: 삭제)\n");
}
int sea()
{
    printf("새로운 학생의 이름을 입력해 주세요 : ");
    scanf("%s", pstudent[data_size].name);
    printf("새로운 학생의 전화번호를 입력해 주세요 : ");
    scanf("%s", pstudent[data_size].phone);
    printf("새로운 학생의 이메일을 입력해 주세요 : ");
    scanf("%s", pstudent[data_size].email);
    printf("새로운 학생의 주소를 입력해 주세요 : ");
    scanf("%s", pstudent[data_size].adress);
    printf("새로운 학생의 벨소리를 입력해 주세요 : ");
    scanf("%d", &pstudent[data_size].bell);
    count++;
    data_size++;
    if (data_size >= alloc_size)
    {
        alloc_size += 5;
        pstudent = (struct student*)realloc(pstudent, sizeof(struct student) * alloc_size);
    }
    printf("\n");
    printf("사용하고자 하는 기능을 선택해 주세요 \n(all: 출력, quit: 종료, search: 검색, add: 추가 change 정보수정, delete: 삭제)\n");
}
int chan()
{
    printf("바꾸실 이름을 선택하세요: ");
    scanf("%s", word2);
    for (i = 0; i < data_size; i++) {
        if (strcmp(pstudent[i].name, word2) == 0)
        {
            apple = 1;
            break;
        }
    }
    if (apple == 0)
    {
        printf("정보가 없습니다\n");
        return;
    }
    else {
        if (strcmp(pstudent[i].name, word2) == 0) {
            printf("새로운 학생의 이름을 입력해 주세요 : ");
            scanf("%s", pstudent[i].name);
            printf("새로운 학생의 전화번호를 입력해 주세요 : ");
            scanf("%s", pstudent[i].phone);
            printf("새로운 학생의 이메일을 입력해 주세요 : ");
            scanf("%s", pstudent[i].email);
            printf("새로운 학생의 주소를 입력해 주세요 : ");
            scanf("%s", pstudent[i].adress);
            printf("새로운 학생의 벨소리를 입력해 주세요 : ");
            scanf("%d", &pstudent[i].bell);
        }
    }
}
int delete()
{
    int j=0;

    printf("삭제하실 이름을 입력하세요 : ");
    scanf("%s", del_name);
    for (i = 0; i < data_size; i++) {
        if (strcmp(pstudent[i].name, del_name) == 0)
        {
            apple = 1;
            break;
        }
    }
    if(apple == 0)
    {
        printf("정보가 없습니다\n");
        return;
    }
    else{
        for (i = 0; i < count+1; i++)
        {
            if (strcmp(pstudent[i].name, del_name) == 0) {
                strcpy(pstudent[i].phone, del);
                count--;
                break;
            }
        }
    }

}
int every()
{
    printf("학생들을 이름순으로 정렬하면\n");
    for (k = 0; k < data_size - 1; k++)
    {
        for (i = 0; i < data_size - 1 - k; i++)
        {
            if (strcmp(pstudent[i].name,pstudent[i + 1].name)>=0)
            {
                tmp = pstudent[i];
                pstudent[i] = pstudent[i + 1];
                pstudent[i + 1] = tmp;
            }
        }
    }
    for (i = 0; i < data_size; i++)
        printf("이름 : %s, 전화번호 : %s 이메일 : %s 주소 : %s 벨소리 종류 : %d\n", pstudent[i].name, pstudent[i].phone, pstudent[i].email, pstudent[i].adress, pstudent[i].bell);
    printf("\n");
    printf("사용하고자 하는 기능을 선택해 주세요 \n(all: 출력, quit: 종료, search: 검색, add: 추가 change 정보수정, delete: 삭제)\n");
}
